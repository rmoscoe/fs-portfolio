"""
Django settings for fs_portfolio project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from dotenv import load_dotenv, find_dotenv
from pathlib import Path
import os

load_dotenv(find_dotenv())

ENV = os.environ.get('ENV')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = ENV == 'DEV'

ALLOWED_HOSTS = ['localhost'] if ENV == 'DEV' else ['ryanmoscoe.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'blog',
    'core_site',
    'portfolio',
    'tailwind',
    'client',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'django_otp.plugins.otp_email',  # <- if you want email capability.
    'two_factor',
    'two_factor.plugins.phonenumber',  # <- if you want phone number capability.
    'two_factor.plugins.email',  # <- if you want email capability.
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'two_factor.middleware.threadlocals.ThreadLocals',
]

if DEBUG:
    # Add django_browser_reload only in DEBUG mode
    INSTALLED_APPS += ['django_browser_reload']
    MIDDLEWARE += ['django_browser_reload.middleware.BrowserReloadMiddleware']

ROOT_URLCONF = 'fs_portfolio.urls'

SITE_ID = 1

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'client', 'templates', 'pages'),
            os.path.join(BASE_DIR, 'core_site', 'templates', 'core_site'),
            os.path.join(BASE_DIR, 'portfolio', 'templates', 'portfolio'),
            # os.path.join(BASE_DIR, 'blog', 'templates', 'blog')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fs_portfolio.wsgi.application'

TAILWIND_APP_NAME = 'client'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('DB_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': os.environ.get('DB_NAME', BASE_DIR / 'db.sqlite3'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': os.environ.get('DB_PORT')
    }
}


# AUTHENTICATION

LOGIN_URL = 'two_factor:login'

LOGOUT_REDIRECT_URL = ''

TWO_FACTOR_CALL_GATEWAY = 'two_factor.gateways.twilio.gateway.Twilio' if ENV == 'PROD' else 'two_factor.gateways.fake.Fake'

TWO_FACTOR_SMS_GATEWAY = 'two_factor.gateways.twilio.gateway.Twilio' if ENV == 'PROD' else 'two_factor.gateways.fake.Fake'

PHONENUMBER_DEFAULT_REGION = 'US'

OTP_EMAIL_SUBJECT = '[Portfolio Notification] Your One-Time Password'

TWILIO_ACCOUNT_SID = os.environ.get('TWILIO_ACCOUNT_SID')

TWILIO_AUTH_TOKEN = os.environ.get('TWILIO_AUTH_TOKEN')

TWILIO_CALLER_ID = os.environ.get('TWILIO_CALLER_ID')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'two_factor': {
            'handlers': ['console'],
            'level': 'INFO',
        }
    }
}

TWO_FACTOR_REMEMBER_COOKIE_AGE = 7 * 24 * 60 * 60

TWO_FACTOR_REMEMBER_COOKIE_PREFIX = 'portfolio-remember-cookie_'

TWO_FACTOR_REMEMBER_COOKIE_DOMAIN = 'localhost' if ENV == 'DEV' else 'ryanmoscoe.com'

OTP_TWILIO_TOKEN_VALIDITY = 60

# OTP_EMAIL_BODY_HTML_TEMPLATE_PATH = '' # TODO: plug in the template path # The render context will include the generated token in the `token` key.

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = BASE_DIR / 'static'

STATICFILES_DIRS = [
    BASE_DIR / 'blog' / 'static',
    BASE_DIR / 'client' / 'static',
    BASE_DIR / 'core_site' / 'static',
    BASE_DIR / 'portfolio' / 'static'
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Email settings

EMAIL_HOST = os.environ.get('EMAIL_HOST')

EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')

EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')

EMAIL_PORT = os.environ.get('EMAIL_PORT')

EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS')

DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL')


# Media Files

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
            "access_key": os.environ.get('AWS_ACCESS_KEY'),
            "secret_key": os.environ.get('AWS_SECRET_ACCESS_KEY'),
            "bucket_name": os.environ.get('AWS_STORAGE_BUCKET_NAME'),
            "region_name": "us-west-1",
            "custom_domain": f"{os.environ.get('AWS_STORAGE_BUCKET_NAME')}.s3.amazonaws.com"
        }
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    }
}

MEDIA_URL = f"https://{STORAGES['default']['OPTIONS']['custom_domain']}/images/"